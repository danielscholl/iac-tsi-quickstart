{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "initials": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      }
    },
    "random": {
      "type": "int",
      "metadata": {
        "description": "3 Digit Random Integer"
      },
      "minValue": 100,
      "maxValue": 999
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Account type, premium vs standard, and local, global redundancy"
      },
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS"
      ]
    },
    "timeSeriesId": {
      "type": "array",
      "metadata": {
        "description": "Time Series ID acts as a partition key for your data and as a primary key for your time series model. It is important that you specify the appropriate Time Series Property ID during environment creation, since you canâ€™t change it later. Note that the Property ID is case sensitive. You can use 1-3 keys: one is required, but up to three can be used to create a composite."
      },
      "defaultValue": [
        {
          "name": "deviceId",
          "type": "string"
        }
      ]
    },
    "timeSeriesTimeStamp": {
      "type": "string",
      "defaultValue": "",
      "maxLength": 90,
      "metadata": {
        "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat('tsistorage', parameters('random')))]",
    "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "isHnsEnabled": true,
    "supportsHttpsTrafficOnly": true,
    "IotHubName": "[concat('iothub', parameters('random'), uniqueString(resourceGroup().id))]",
    "IotHubId": "[resourceId('Microsoft.Devices/IotHubs', variables('IotHubName'))]",
    "IotHubKeyName": "iothubowner",
    "IotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName'))]"
  },
  "resources": [
    {
      "comments": "## Storage Account ##",
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "test",
        "contact": "[parameters('initials')]"
      },
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": "[variables('supportsHttpsTrafficOnly')]",
        "isHnsEnabled": "[variables('isHnsEnabled')]"
      }
    },
    {
      "comments": "## IoT Hub ##",
      "type": "Microsoft.Devices/IotHubs",
      "name": "[variables('IotHubName')]",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "test",
        "contact": "[parameters('initials')]"
      },
      "sku": {
        "name": "S3",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
      }
    }
  ],
  "outputs": {
    "storageAccount": {
      "type": "object",
      "value": {
        "id": "[variables('storageId')]",
        "name": "[variables('storageAccountName')]",
        "key": "[listKeys(variables('storageId'), '2016-01-01').keys[0].value]"
      }
    },
    "iotHub": {
      "type": "object",
      "value": {
        "id": "[variables('IotHubId')]",
        "keys": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('IotHubName')), '2016-02-03')]"
      }
    }
  }
}