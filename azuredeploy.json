{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "initials": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      },
      "defaultValue": "cat"
    },
    "random": {
      "type": "int",
      "metadata": {
        "description": "3 Digit Random Integer"
      },
      "minValue": 100,
      "maxValue": 999,
      "defaultValue": 999
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Account type, premium vs standard, and local, global redundancy"
      },
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS"
      ]
    },
    "enableADSLGen2": {
      "type": "bool",
      "metadata": {
        "description": "Enable ADSL Gen 2"
      },
      "defaultValue": false
    },
    "timeSeriesId": {
      "type": "array",
      "metadata": {
        "description": "Time Series ID acts as a partition key for your data and as a primary key for your time series model. It is important that you specify the appropriate Time Series Property ID during environment creation, since you canâ€™t change it later. Note that the Property ID is case sensitive. You can use 1-3 keys: one is required, but up to three can be used to create a composite."
      },
      "defaultValue": [
        {
          "name": "deviceId",
          "type": "string"
        }
      ]
    },
    "timeSeriesTimeStamp": {
      "type": "string",
      "defaultValue": "",
      "maxLength": 90,
      "metadata": {
        "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used."
      }
    },
    "accessPolicyReaderObjectIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "A list of object ids of the users or applications in AAD that should have Reader access to the environment. The service principal objectId can be obtained by calling the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets. Creating an access policy for AAD groups is not yet supported."
      }
    },
    "timeSeriesOwnerId": {
      "type": "string",
      "metadata": {
        "description": "User Object Id to give contributor rights to the subscription used for this deployment."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "StorageAccountName": "[concat('tsistorage', parameters('random'))]",
    "StorageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
    "SupportsHttpsTrafficOnly": false,
    "IotHubName": "[concat('iothub', parameters('random'))]",
    "IotHubId": "[resourceId('Microsoft.Devices/IotHubs', variables('IotHubName'))]",
    "IotHubKeyName": "iothubowner",
    "IotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', variables('iotHubName'), variables('IotHubKeyName'))]",
    "ConsumerGroupName": "[concat(variables('iotHubName'), '/events/tsi')]",
    "TsiName": "[concat('timeseries', parameters('random'))]",
    "TsiId": "[resourceId('Microsoft.TimeSeriesInsights/Environments', variables('TsiName'))]"
  },
  "resources": [
    {
      "comments": "## Storage Account ##",
      "name": "[variables('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "test",
        "contact": "[parameters('initials')]"
      },
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": "[variables('SupportsHttpsTrafficOnly')]",
        "isHnsEnabled": "[parameters('enableADSLGen2')]"
      }
    },
    {
      "comments": "## IoT Hub ##",
      "type": "Microsoft.Devices/IotHubs",
      "name": "[variables('IotHubName')]",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "test",
        "contact": "[parameters('initials')]"
      },
      "sku": {
        "name": "S3",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
      }
    },
    {
      "comments": "## Consumer Group ##",
      "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
      "name": "[variables('ConsumerGroupName')]",
      "apiVersion": "2018-04-01",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]"
      ]
    },
    {
      "comments": "## Time Series Insights ##",
      "type": "Microsoft.TimeSeriesInsights/environments",
      "name": "[variables('TsiName')]",
      "apiVersion": "2018-08-15-preview",
      "location": "[resourceGroup().location]",
      "kind": "LongTerm",
      "dependsOn": [
        "[concat('Microsoft.Devices/IotHubs/', variables('IotHubName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]"
      ],
      "properties": {
        "storageConfiguration": {
          "accountName": "[variables('StorageAccountName')]",
          "managementKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2018-07-01').keys[0].value]"
        },
        "timeSeriesIdProperties": "[parameters('timeSeriesId')]"
      },
      "sku": {
        "name": "L1",
        "capacity": 1
      },
      "resources": [
        {
          "type": "eventSources",
          "name": "[variables('IotHubName')]",
          "apiVersion": "2018-08-15-preview",
          "location": "[resourceGroup().location]",
          "kind": "Microsoft.IoTHub",
          "dependsOn": [
            "[concat('Microsoft.TimeSeriesInsights/environments/', variables('TsiName'))]",
            "[concat('Microsoft.Devices/IotHubs/', variables('IotHubName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]"
          ],
          "properties": {
            "eventSourceResourceId": "[variables('IotHubId')]",
            "iotHubName": "[variables('IoTHubName')]",
            "consumerGroupName": "tsi",
            "keyName": "service",
            "sharedAccessKey": "[listkeys(resourceId('Microsoft.Devices/IoTHubs/IotHubKeys', variables('IoTHubName'), 'service'), '2018-04-01').primaryKey]",
            "timestampPropertyName": "[parameters('timeSeriesTimeStamp')]"
          }
        }
      ]
    },
    {
      "condition": "[not(empty(parameters('accessPolicyReaderObjectIds')))]",
      "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
      "name": "[concat(variables('TsiName'), '/', 'readerAccessPolicy', copyIndex())]",
      "copy": {
        "name": "accessPolicyReaderCopy",
        "count": "[if(empty(parameters('accessPolicyReaderObjectIds')), 1, length(parameters('accessPolicyReaderObjectIds')))]"
      },
      "apiVersion": "2018-08-15-preview",
      "dependsOn": [
        "[concat('Microsoft.TimeSeriesInsights/environments/', variables('TsiName'))]"
      ],
      "properties": {
        "principalObjectId": "[parameters('accessPolicyReaderObjectIds')[copyIndex()]]",
        "roles": [
          "Reader"
        ]
      }
    },
    {
      "name": "[concat(variables('TsiName'), '/', 'contributorAccessPolicy')]",
      "type": "Microsoft.TimeSeriesInsights/environments/accessPolicies",
      "apiVersion": "2018-08-15-preview",
      "dependsOn": [
        "[concat('Microsoft.TimeSeriesInsights/environments/', variables('TsiName'))]"
      ],
      "properties": {
        "principalObjectId": "[parameters('timeSeriesOwnerId')]",
        "description": "Creator",
        "roles": [
          "Contributor"
        ]
      }
    }
  ],
  "outputs": {
    "storageAccount": {
      "type": "object",
      "value": {
        "id": "[variables('StorageId')]",
        "name": "[variables('StorageAccountName')]",
        "key": "[listKeys(variables('StorageId'), '2016-01-01').keys[0].value]"
      }
    },
    "iotHub": {
      "type": "object",
      "value": {
        "id": "[variables('IotHubId')]",
        "keys": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('IotHubName')), '2016-02-03')]"
      }
    },
    "tsi": {
      "type": "object",
      "value": {
        "id": "[variables('TsiId')]"
      }
    }
  }
}